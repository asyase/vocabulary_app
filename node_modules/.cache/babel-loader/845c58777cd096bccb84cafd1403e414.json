{"ast":null,"code":"var _jsxFileName = \"/Users/anastasijaselevjorstova/Desktop/vocabulary_flashcards/vocabulary_flashcards/src/assets/components/WordList.jsx\",\n    _s = $RefreshSig$();\n\nimport AddButton from \"./AddButton\";\nimport WordCard from \"./WordCard\";\nimport React, { useState } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport CancelButton from \"./CancelButton\";\nimport SaveButtonNew from \"./SaveButtonNew\";\nimport Error from \"./Error\";\nimport { toJS } from 'mobx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet classNames = require('classnames');\n\nfunction WordList(_ref) {\n  _s();\n\n  let {\n    wordStore\n  } = _ref;\n  const words = toJS(wordStore.words);\n  const [isAdding, setAdding] = useState(false);\n  const [newWord, setNewWord] = useState([]);\n  const [isVerified, setValid] = useState(true); //verification indicator\n\n  let inputClass = classNames({\n    'word__input': true,\n    'notValid': !isVerified\n  }); //disabled indicator\n\n  let isDisabled = \"\";\n\n  const handleAdd = () => setAdding(true);\n\n  const addNewWord = e => {\n    e.preventDefault();\n\n    if (isVerified) {\n      wordStore.add(newWord);\n      console.log(newWord);\n      setNewWord(\"\");\n      setAdding(false);\n      setValid(false);\n    } else {\n      isDisabled = \"disabled\";\n    }\n  };\n\n  const handleChangeData = e => {\n    const name = e.target.name;\n    const info = e.target.value;\n\n    if (wordStore.isValid(info)) {\n      setValid(true);\n      setNewWord({ ...newWord,\n        [name]: info\n      });\n    } else {\n      setValid(false);\n      setNewWord({ ...newWord,\n        [name]: info\n      });\n    }\n  };\n\n  const undoHandler = () => setAdding(false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: wordStore.error ? /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: words.filter((word, index) => {\n          if (wordStore.saerchTearm === '') {\n            return word;\n          } else if (word.english.toLowerCase().includes(wordStore.saerchTearm.toLowerCase())) {\n            return word;\n          }\n        }).map(word => /*#__PURE__*/_jsxDEV(WordCard, { ...word\n        }, word.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list__control\",\n        children: isAdding ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"word _new\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word__data\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: inputClass,\n              name: \"english\",\n              onChange: handleChangeData,\n              placeholder: \"english\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: inputClass,\n              name: \"transcription\",\n              onChange: handleChangeData,\n              placeholder: \"transcription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: inputClass,\n              name: \"russian\",\n              onChange: handleChangeData,\n              placeholder: \"estonian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: inputClass,\n              name: \"tags\",\n              onChange: handleChangeData,\n              placeholder: \"tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"word__control\",\n            children: [/*#__PURE__*/_jsxDEV(SaveButtonNew, {\n              disabled: isDisabled,\n              addNewWord: addNewWord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(CancelButton, {\n              undoHandler: undoHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(AddButton, {\n          handleAdd: handleAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(WordList, \"q0qWV9U4ybR30I3XR5+MpRNY6QA=\");\n\n_c = WordList;\nexport default inject([\"wordStore\"])(observer(WordList));\n\nvar _c;\n\n$RefreshReg$(_c, \"WordList\");","map":{"version":3,"names":["AddButton","WordCard","React","useState","observer","inject","CancelButton","SaveButtonNew","Error","toJS","classNames","require","WordList","wordStore","words","isAdding","setAdding","newWord","setNewWord","isVerified","setValid","inputClass","isDisabled","handleAdd","addNewWord","e","preventDefault","add","console","log","handleChangeData","name","target","info","value","isValid","undoHandler","error","filter","word","index","saerchTearm","english","toLowerCase","includes","map","id"],"sources":["/Users/anastasijaselevjorstova/Desktop/vocabulary_flashcards/vocabulary_flashcards/src/assets/components/WordList.jsx"],"sourcesContent":["import AddButton from \"./AddButton\";\nimport WordCard from \"./WordCard\";\nimport React, { useState } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport CancelButton from \"./CancelButton\";\nimport SaveButtonNew from \"./SaveButtonNew\";\nimport Error from \"./Error\";\nimport { toJS } from 'mobx';\n\nlet classNames = require('classnames');\n\nfunction WordList({ wordStore }) {\n\n    const words = toJS(wordStore.words);\n\n    const [isAdding, setAdding] = useState(false);\n    const [newWord, setNewWord] = useState([]);\n    const [isVerified, setValid] = useState(true);\n\n    //verification indicator\n    let inputClass = classNames({\n        'word__input': true,\n        'notValid': !isVerified,\n    });\n\n    //disabled indicator\n    let isDisabled = \"\";\n\n    const handleAdd = () => setAdding(true);\n\n    const addNewWord = (e) => {\n        e.preventDefault();\n        if (isVerified) {\n            wordStore.add(newWord);\n            console.log(newWord);\n            setNewWord(\"\");\n            setAdding(false);\n            setValid(false);\n        } else {\n            isDisabled = \"disabled\";\n        }\n    };\n\n    const handleChangeData = (e) => {\n        const name = e.target.name;\n        const info = e.target.value;\n        if (wordStore.isValid(info)) {\n            setValid(true);\n            setNewWord({ ...newWord, [name]: info });\n        } else {\n            setValid(false);\n            setNewWord({ ...newWord, [name]: info });\n        }\n    }\n\n\n\n\n    const undoHandler = () => setAdding(false);\n\n    return (\n        <>\n            {wordStore.error ? (\n                <Error />\n            ) : (\n                < div className=\"list-box\" >\n                    <div className=\"list\">\n                        {\n                            words.filter((word, index) => {\n                                if (wordStore.saerchTearm === '') { return word }\n                                else if (word.english.toLowerCase().includes(wordStore.saerchTearm.toLowerCase())) { return word }\n                            }).map((word) =>\n                                <WordCard key={word.id} {...word} />\n                            )\n                        }\n                    </div>\n                    <div className=\"list__control\">\n                        {\n                            isAdding ? (\n                                <div className=\"word _new\">\n                                    <div className=\"word__data\">\n                                        <input className={inputClass} name='english' onChange={handleChangeData} placeholder='english' />\n                                        <input className={inputClass} name='transcription' onChange={handleChangeData} placeholder='transcription' />\n                                        <input className={inputClass} name='russian' onChange={handleChangeData} placeholder='estonian' />\n                                        <input className={inputClass} name='tags' onChange={handleChangeData} placeholder='tags' />\n                                    </div>\n                                    <div className=\"word__control\">\n                                        <SaveButtonNew disabled={isDisabled} addNewWord={addNewWord} />\n                                        <CancelButton undoHandler={undoHandler} />\n                                    </div>\n                                </div>\n                            ) : (\n                                <AddButton handleAdd={handleAdd} />\n                            )\n                        }\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default inject([\"wordStore\"])(observer(WordList));\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}